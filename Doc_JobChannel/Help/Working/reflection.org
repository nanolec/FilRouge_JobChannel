<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="BO">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="BLL_Client">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="API">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="BLL_Server">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="DAL">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:API">
      <apidata name="API" group="namespace" />
      <elements>
        <element api="T:API.IJobChannelService" />
        <element api="T:API.JobChannelService" />
      </elements>
    </api>
    <api id="T:API.IJobChannelService">
      <apidata name="IJobChannelService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:API.JobChannelService" ref="true" />
      </implementors>
      <elements>
        <element api="M:API.IJobChannelService.GetOffres" />
        <element api="M:API.IJobChannelService.GetOffresFiltrer(BO.DTO.FiltersOffreRequest)" />
        <element api="M:API.IJobChannelService.InsertOffre(BO.Offre)" />
        <element api="M:API.IJobChannelService.DeleteOffre(System.String)" />
        <element api="M:API.IJobChannelService.UpdateOffre(BO.Offre)" />
        <element api="M:API.IJobChannelService.GetUtilisateurs" />
        <element api="M:API.IJobChannelService.FindUtilisateurById(System.String)" />
        <element api="M:API.IJobChannelService.GetRegion" />
        <element api="M:API.IJobChannelService.GetPoste" />
        <element api="M:API.IJobChannelService.GetContrat" />
      </elements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.DeleteOffre(System.String)">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="idOffre">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.FindUtilisateurById(System.String)">
      <apidata name="FindUtilisateurById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="idUtilisateur">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Utilisateur" ref="true" />
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetContrat">
      <apidata name="GetContrat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetOffres">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetOffresFiltrer(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetOffresFiltrer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filtre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetPoste">
      <apidata name="GetPoste" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Poste" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetRegion">
      <apidata name="GetRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Region" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.GetUtilisateurs">
      <apidata name="GetUtilisateurs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Utilisateur" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.IJobChannelService.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.IJobChannelService" ref="true" />
      </containers>
    </api>
    <api id="T:API.JobChannelService">
      <apidata name="JobChannelService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:API.IJobChannelService" ref="true" />
      </implements>
      <elements>
        <element api="M:API.JobChannelService.GetOffres" />
        <element api="M:API.JobChannelService.GetOffresFiltrer(BO.DTO.FiltersOffreRequest)" />
        <element api="M:API.JobChannelService.GetUtilisateurs" />
        <element api="M:API.JobChannelService.FindUtilisateurById(System.String)" />
        <element api="M:API.JobChannelService.InsertOffre(BO.Offre)" />
        <element api="M:API.JobChannelService.DeleteOffre(System.String)" />
        <element api="M:API.JobChannelService.UpdateOffre(BO.Offre)" />
        <element api="M:API.JobChannelService.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.DeleteOffre(System.String)">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="IdOffre">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.DeleteOffre(System.String)">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.FindUtilisateurById(System.String)">
      <apidata name="FindUtilisateurById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="idUtilisateur">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Utilisateur" ref="true" />
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.FindUtilisateurById(System.String)">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.GetOffres">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.GetOffres">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.GetOffresFiltrer(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetOffresFiltrer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filtre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.GetOffresFiltrer(BO.DTO.FiltersOffreRequest)">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.GetUtilisateurs">
      <apidata name="GetUtilisateurs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Utilisateur" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.GetUtilisateurs">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.InsertOffre(BO.Offre)">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="M:API.JobChannelService.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:API.IJobChannelService.UpdateOffre(BO.Offre)">
          <type api="T:API.IJobChannelService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="API" module="API" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:API" />
        <type api="T:API.JobChannelService" ref="true" />
      </containers>
    </api>
    <api id="N:BLL_Client">
      <apidata name="BLL_Client" group="namespace" />
      <elements>
        <element api="T:BLL_Client.ControllerC" />
      </elements>
    </api>
    <api id="T:BLL_Client.ControllerC">
      <apidata name="ControllerC" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BLL_Client.ControllerC.GetContrat" />
        <element api="M:BLL_Client.ControllerC.GetPoste" />
        <element api="M:BLL_Client.ControllerC.GetRegion" />
        <element api="M:BLL_Client.ControllerC.InsertOffre(BO.Offre)" />
        <element api="M:BLL_Client.ControllerC.UpdateOffre(BO.Offre)" />
        <element api="M:BLL_Client.ControllerC.DeleteOffre(System.Nullable{System.Int32})" />
        <element api="M:BLL_Client.ControllerC.GetOffres" />
        <element api="M:BLL_Client.ControllerC.GetOffres(BO.DTO.FiltersOffreRequest)" />
        <element api="M:BLL_Client.ControllerC.listOffreByRegion(System.Int32)" />
        <element api="M:BLL_Client.ControllerC.listOffreByContrat(System.String)" />
        <element api="M:BLL_Client.ControllerC.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.DeleteOffre(System.Nullable{System.Int32})">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="idOffre">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.GetContrat">
      <apidata name="GetContrat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.GetOffres">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.GetOffres(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filtersOffre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:BO.Offre" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.GetPoste">
      <apidata name="GetPoste" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Poste" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.GetRegion">
      <apidata name="GetRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Region" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.listOffreByContrat(System.String)">
      <apidata name="listOffreByContrat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contratId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.listOffreByRegion(System.Int32)">
      <apidata name="listOffreByRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="regionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Client.ControllerC.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Client" module="BLL_Client" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Client" />
        <type api="T:BLL_Client.ControllerC" ref="true" />
      </containers>
    </api>
    <api id="N:BLL_Server">
      <apidata name="BLL_Server" group="namespace" />
      <elements>
        <element api="T:BLL_Server.ControllerS" />
      </elements>
    </api>
    <api id="T:BLL_Server.ControllerS">
      <apidata name="ControllerS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BLL_Server.ControllerS.GetOffres" />
        <element api="M:BLL_Server.ControllerS.GetOffres(BO.DTO.FiltersOffreRequest)" />
        <element api="M:BLL_Server.ControllerS.GetOffresByContratId(System.Int32)" />
        <element api="M:BLL_Server.ControllerS.GetOffresByRegionId(System.Int32)" />
        <element api="M:BLL_Server.ControllerS.FindUtilisateurById(System.Int32)" />
        <element api="M:BLL_Server.ControllerS.GetUtilisateurs" />
        <element api="M:BLL_Server.ControllerS.GetContrat" />
        <element api="M:BLL_Server.ControllerS.GetPoste" />
        <element api="M:BLL_Server.ControllerS.GetRegion" />
        <element api="M:BLL_Server.ControllerS.InsertOffre(BO.Offre)" />
        <element api="M:BLL_Server.ControllerS.DeleteOffre(System.Int32)" />
        <element api="M:BLL_Server.ControllerS.UpdateOffre(BO.Offre)" />
        <element api="M:BLL_Server.ControllerS.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.DeleteOffre(System.Int32)">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="idOffre">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.FindUtilisateurById(System.Int32)">
      <apidata name="FindUtilisateurById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="idUtilisateur">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Utilisateur" ref="true" />
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetContrat">
      <apidata name="GetContrat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetOffres">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetOffres(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filtre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetOffresByContratId(System.Int32)">
      <apidata name="GetOffresByContratId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="idContrat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetOffresByRegionId(System.Int32)">
      <apidata name="GetOffresByRegionId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="idRegion">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetPoste">
      <apidata name="GetPoste" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Poste" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetRegion">
      <apidata name="GetRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Region" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.GetUtilisateurs">
      <apidata name="GetUtilisateurs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Utilisateur" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="M:BLL_Server.ControllerS.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BLL_Server" module="BLL_Server" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BLL_Server" />
        <type api="T:BLL_Server.ControllerS" ref="true" />
      </containers>
    </api>
    <api id="N:BO">
      <apidata name="BO" group="namespace" />
      <elements>
        <element api="T:BO.Contrat" />
        <element api="T:BO.Offre" />
        <element api="T:BO.Poste" />
        <element api="T:BO.Region" />
        <element api="T:BO.Utilisateur" />
      </elements>
    </api>
    <api id="T:BO.Contrat">
      <apidata name="Contrat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BO.Contrat.#ctor" />
        <element api="M:BO.Contrat.#ctor(System.Nullable{System.Int32},System.String)" />
        <element api="M:BO.Contrat.#ctor(System.Data.DataRow)" />
        <element api="M:BO.Contrat.Equals(System.Object)" />
        <element api="M:BO.Contrat.ToString" />
        <element api="M:BO.Contrat.GetHashCode" />
        <element api="P:BO.Contrat.Id" />
        <element api="P:BO.Contrat.Type" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
      </containers>
    </api>
    <api id="M:BO.Contrat.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Contrat.#ctor(System.Data.DataRow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Contrat.#ctor(System.Nullable{System.Int32},System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Contrat.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Contrat.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Contrat.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Contrat.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Contrat.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Contrat" ref="true" />
      </containers>
    </api>
    <api id="T:BO.Offre">
      <apidata name="Offre" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BO.Offre.#ctor" />
        <element api="M:BO.Offre.#ctor(System.Int32,BO.Poste,BO.Contrat,BO.Region,System.String,System.String,System.String,System.DateTime,System.DateTime)" />
        <element api="M:BO.Offre.#ctor(System.Data.DataRow,BO.Poste,BO.Contrat,BO.Region)" />
        <element api="M:BO.Offre.#ctor(System.String,System.String,BO.Poste,BO.Contrat,BO.Region,System.DateTime,System.String)" />
        <element api="M:BO.Offre.#ctor(System.Nullable{System.Int32},BO.Poste,BO.Contrat,BO.Region,System.String,System.String,System.DateTime,System.String)" />
        <element api="M:BO.Offre.Equals(System.Object)" />
        <element api="M:BO.Offre.ToString" />
        <element api="M:BO.Offre.GetHashCode" />
        <element api="P:BO.Offre.Id" />
        <element api="P:BO.Offre.Poste" />
        <element api="P:BO.Offre.Contrat" />
        <element api="P:BO.Offre.Region" />
        <element api="P:BO.Offre.Titre" />
        <element api="P:BO.Offre.Description" />
        <element api="P:BO.Offre.Lien" />
        <element api="P:BO.Offre.Creation" />
        <element api="P:BO.Offre.Modif" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
      </containers>
    </api>
    <api id="M:BO.Offre.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.#ctor(System.Data.DataRow,BO.Poste,BO.Contrat,BO.Region)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="poste">
          <type api="T:BO.Poste" ref="true" />
        </parameter>
        <parameter name="contrat">
          <type api="T:BO.Contrat" ref="true" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.#ctor(System.Int32,BO.Poste,BO.Contrat,BO.Region,System.String,System.String,System.String,System.DateTime,System.DateTime)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="poste">
          <type api="T:BO.Poste" ref="true" />
        </parameter>
        <parameter name="contrat">
          <type api="T:BO.Contrat" ref="true" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
        <parameter name="titre">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lien">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="creation">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="modif">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.#ctor(System.Nullable{System.Int32},BO.Poste,BO.Contrat,BO.Region,System.String,System.String,System.DateTime,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="poste">
          <type api="T:BO.Poste" ref="true" />
        </parameter>
        <parameter name="contrat">
          <type api="T:BO.Contrat" ref="true" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
        <parameter name="titre">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="creation">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lien">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.#ctor(System.String,System.String,BO.Poste,BO.Contrat,BO.Region,System.DateTime,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="titre">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="poste">
          <type api="T:BO.Poste" ref="true" />
        </parameter>
        <parameter name="contrat">
          <type api="T:BO.Contrat" ref="true" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
        <parameter name="creation">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lien">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Contrat">
      <apidata name="Contrat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contrat" />
      <setter name="set_Contrat" />
      <returns>
        <type api="T:BO.Contrat" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Creation">
      <apidata name="Creation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Creation" />
      <setter name="set_Creation" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Lien">
      <apidata name="Lien" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Lien" />
      <setter name="set_Lien" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Modif">
      <apidata name="Modif" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Modif" />
      <setter name="set_Modif" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Poste">
      <apidata name="Poste" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Poste" />
      <setter name="set_Poste" />
      <returns>
        <type api="T:BO.Poste" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Region">
      <apidata name="Region" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Region" />
      <setter name="set_Region" />
      <returns>
        <type api="T:BO.Region" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Offre.Titre">
      <apidata name="Titre" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Titre" />
      <setter name="set_Titre" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Offre.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Offre" ref="true" />
      </containers>
    </api>
    <api id="T:BO.Poste">
      <apidata name="Poste" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BO.Poste.#ctor" />
        <element api="M:BO.Poste.#ctor(System.Nullable{System.Int32},System.String)" />
        <element api="M:BO.Poste.#ctor(System.Data.DataRow)" />
        <element api="M:BO.Poste.Equals(System.Object)" />
        <element api="M:BO.Poste.ToString" />
        <element api="M:BO.Poste.GetHashCode" />
        <element api="P:BO.Poste.Id" />
        <element api="P:BO.Poste.Type" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
      </containers>
    </api>
    <api id="M:BO.Poste.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Poste.#ctor(System.Data.DataRow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Poste.#ctor(System.Nullable{System.Int32},System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Poste.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Poste.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Poste.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Poste.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Poste.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Poste" ref="true" />
      </containers>
    </api>
    <api id="T:BO.Region">
      <apidata name="Region" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BO.Region.#ctor" />
        <element api="M:BO.Region.#ctor(System.Nullable{System.Int32},System.String)" />
        <element api="M:BO.Region.#ctor(System.Data.DataRow)" />
        <element api="M:BO.Region.Equals(System.Object)" />
        <element api="M:BO.Region.ToString" />
        <element api="M:BO.Region.GetHashCode" />
        <element api="P:BO.Region.Id" />
        <element api="P:BO.Region.Nom" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
      </containers>
    </api>
    <api id="M:BO.Region.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Region.#ctor(System.Data.DataRow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Region.#ctor(System.Nullable{System.Int32},System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="nom">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Region.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Region.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Region.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Region.Nom">
      <apidata name="Nom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Nom" />
      <setter name="set_Nom" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Region.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Region" ref="true" />
      </containers>
    </api>
    <api id="T:BO.Utilisateur">
      <apidata name="Utilisateur" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:BO.Utilisateur.#ctor" />
        <element api="M:BO.Utilisateur.#ctor(System.Int32,BO.Region,System.String,System.String,System.Boolean)" />
        <element api="M:BO.Utilisateur.#ctor(System.Data.DataRow,BO.Region)" />
        <element api="M:BO.Utilisateur.Equals(System.Object)" />
        <element api="M:BO.Utilisateur.ToString" />
        <element api="M:BO.Utilisateur.GetHashCode" />
        <element api="P:BO.Utilisateur.Id" />
        <element api="P:BO.Utilisateur.Region" />
        <element api="P:BO.Utilisateur.Nom" />
        <element api="P:BO.Utilisateur.Prenom" />
        <element api="P:BO.Utilisateur.Admin" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.#ctor(System.Data.DataRow,BO.Region)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.#ctor(System.Int32,BO.Region,System.String,System.String,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
        <parameter name="nom">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prenom">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="admin">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Utilisateur.Admin">
      <apidata name="Admin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Admin" />
      <setter name="set_Admin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Utilisateur.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Utilisateur.Nom">
      <apidata name="Nom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Nom" />
      <setter name="set_Nom" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Utilisateur.Prenom">
      <apidata name="Prenom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prenom" />
      <setter name="set_Prenom" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="P:BO.Utilisateur.Region">
      <apidata name="Region" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Region" />
      <setter name="set_Region" />
      <returns>
        <type api="T:BO.Region" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="M:BO.Utilisateur.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO" />
        <type api="T:BO.Utilisateur" ref="true" />
      </containers>
    </api>
    <api id="N:BO.DTO">
      <apidata name="BO.DTO" group="namespace" />
      <elements>
        <element api="T:BO.DTO.Intervalle" />
        <element api="T:BO.DTO.FiltersOffreRequest" />
      </elements>
    </api>
    <api id="T:BO.DTO.FiltersOffreRequest">
      <apidata name="FiltersOffreRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:BO.DTO.FiltersOffreRequest.region" />
        <element api="F:BO.DTO.FiltersOffreRequest.contrat" />
        <element api="F:BO.DTO.FiltersOffreRequest.poste" />
        <element api="F:BO.DTO.FiltersOffreRequest.intervalle" />
        <element api="M:BO.DTO.FiltersOffreRequest.#ctor" />
        <element api="M:BO.DTO.FiltersOffreRequest.#ctor(BO.Region,BO.Contrat,BO.Poste,BO.DTO.Intervalle)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
      </containers>
    </api>
    <api id="M:BO.DTO.FiltersOffreRequest.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="M:BO.DTO.FiltersOffreRequest.#ctor(BO.Region,BO.Contrat,BO.Poste,BO.DTO.Intervalle)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="region">
          <type api="T:BO.Region" ref="true" />
        </parameter>
        <parameter name="contrat">
          <type api="T:BO.Contrat" ref="true" />
        </parameter>
        <parameter name="poste">
          <type api="T:BO.Poste" ref="true" />
        </parameter>
        <parameter name="intervalle">
          <type api="T:BO.DTO.Intervalle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.FiltersOffreRequest.contrat">
      <apidata name="contrat" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BO.Contrat" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.FiltersOffreRequest.intervalle">
      <apidata name="intervalle" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BO.DTO.Intervalle" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.FiltersOffreRequest.poste">
      <apidata name="poste" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BO.Poste" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.FiltersOffreRequest.region">
      <apidata name="region" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:BO.Region" ref="true" />
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
      </containers>
    </api>
    <api id="T:BO.DTO.Intervalle">
      <apidata name="Intervalle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:BO.DTO.Intervalle.Start" />
        <element api="F:BO.DTO.Intervalle.End" />
        <element api="M:BO.DTO.Intervalle.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
      </containers>
    </api>
    <api id="M:BO.DTO.Intervalle.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="end">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.Intervalle" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.Intervalle.End">
      <apidata name="End" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.Intervalle" ref="true" />
      </containers>
    </api>
    <api id="F:BO.DTO.Intervalle.Start">
      <apidata name="Start" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="BO" module="BO" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:BO.DTO" />
        <type api="T:BO.DTO.Intervalle" ref="true" />
      </containers>
    </api>
    <api id="N:DAL">
      <apidata name="DAL" group="namespace" />
      <elements>
        <element api="T:DAL.ISQLManager" />
      </elements>
    </api>
    <api id="T:DAL.ISQLManager">
      <apidata name="ISQLManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:DAL.ISQLManager.ExcecuteQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})" />
        <element api="M:DAL.ISQLManager.ExecuteNonQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})" />
        <element api="M:DAL.ISQLManager.ExecuteProcStocke(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})" />
        <element api="M:DAL.ISQLManager.ExecuteNonQueryProc(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL" />
      </containers>
    </api>
    <api id="M:DAL.ISQLManager.ExcecuteQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
      <apidata name="ExcecuteQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="requete">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" optional="true">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL" />
        <type api="T:DAL.ISQLManager" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.ISQLManager.ExecuteNonQuery(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="requete">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" optional="true">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL" />
        <type api="T:DAL.ISQLManager" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.ISQLManager.ExecuteNonQueryProc(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
      <apidata name="ExecuteNonQueryProc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="procedureName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" optional="true">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL" />
        <type api="T:DAL.ISQLManager" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.ISQLManager.ExecuteProcStocke(System.String,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
      <apidata name="ExecuteProcStocke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="procedureName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" optional="true">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL" />
        <type api="T:DAL.ISQLManager" ref="true" />
      </containers>
    </api>
    <api id="N:DAL.Configuration">
      <apidata name="DAL.Configuration" group="namespace" />
      <elements>
        <element api="T:DAL.Configuration.ConfigDAL" />
      </elements>
    </api>
    <api id="T:DAL.Configuration.ConfigDAL">
      <apidata name="ConfigDAL" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:DAL.Configuration.ConfigDAL.sQLManager" />
        <element api="F:DAL.Configuration.ConfigDAL.offreDAO" />
        <element api="F:DAL.Configuration.ConfigDAL.utilisateurDAO" />
        <element api="F:DAL.Configuration.ConfigDAL.contratDAO" />
        <element api="F:DAL.Configuration.ConfigDAL.posteDAO" />
        <element api="F:DAL.Configuration.ConfigDAL.regionDAO" />
        <element api="M:DAL.Configuration.ConfigDAL.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
      </containers>
    </api>
    <api id="M:DAL.Configuration.ConfigDAL.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.contratDAO">
      <apidata name="contratDAO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.DAO.IContratDAO" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.offreDAO">
      <apidata name="offreDAO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.posteDAO">
      <apidata name="posteDAO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.DAO.IPosteDAO" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.regionDAO">
      <apidata name="regionDAO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.DAO.IRegionDAO" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.sQLManager">
      <apidata name="sQLManager" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.ISQLManager" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.Configuration.ConfigDAL.utilisateurDAO">
      <apidata name="utilisateurDAO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Configuration" />
        <type api="T:DAL.Configuration.ConfigDAL" ref="true" />
      </containers>
    </api>
    <api id="N:DAL.DAO">
      <apidata name="DAL.DAO" group="namespace" />
      <elements>
        <element api="T:DAL.DAO.IContratDAO" />
        <element api="T:DAL.DAO.IOffreDAO" />
        <element api="T:DAL.DAO.IPosteDAO" />
        <element api="T:DAL.DAO.IRegionDAO" />
        <element api="T:DAL.DAO.IUtilisateurDAO" />
        <element api="T:DAL.DAO.OffreDAO" />
        <element api="T:DAL.DAO.ContratDAO" />
        <element api="T:DAL.DAO.UtilisateurDAO" />
        <element api="T:DAL.DAO.PosteDAO" />
        <element api="T:DAL.DAO.DAO_BASE" />
      </elements>
    </api>
    <api id="T:DAL.DAO.ContratDAO">
      <apidata name="ContratDAO" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:DAL.DAO.DAO_BASE" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DAL.DAO.IContratDAO" ref="true" />
      </implements>
      <elements>
        <element api="M:DAL.DAO.ContratDAO.#ctor(DAL.ISQLManager)" />
        <element api="M:DAL.DAO.ContratDAO.GetAllContrats" />
        <element api="M:DAL.DAO.ContratDAO.findByType(System.String)" />
        <element api="M:DAL.DAO.ContratDAO.FindContratByID(System.Int32)" />
        <element api="F:DAL.DAO.DAO_BASE.SQLManager" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.ContratDAO.#ctor(DAL.ISQLManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sQLManager">
          <type api="T:DAL.ISQLManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.ContratDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.ContratDAO.findByType(System.String)">
      <apidata name="findByType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="Type">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IContratDAO.findByType(System.String)">
          <type api="T:DAL.DAO.IContratDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.ContratDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.ContratDAO.FindContratByID(System.Int32)">
      <apidata name="FindContratByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ContratId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Contrat" ref="true" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IContratDAO.FindContratByID(System.Int32)">
          <type api="T:DAL.DAO.IContratDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.ContratDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.ContratDAO.GetAllContrats">
      <apidata name="GetAllContrats" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IContratDAO.GetAllContrats">
          <type api="T:DAL.DAO.IContratDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.ContratDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.DAO_BASE">
      <apidata name="DAO_BASE" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:DAL.DAO.OffreDAO" ref="true" />
          <type api="T:DAL.DAO.ContratDAO" ref="true" />
          <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
          <type api="T:DAL.DAO.PosteDAO" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:DAL.DAO.DAO_BASE.SQLManager" />
        <element api="M:DAL.DAO.DAO_BASE.#ctor(DAL.ISQLManager)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.DAO_BASE.#ctor(DAL.ISQLManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="sQLManager">
          <type api="T:DAL.ISQLManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.DAO_BASE" ref="true" />
      </containers>
    </api>
    <api id="F:DAL.DAO.DAO_BASE.SQLManager">
      <apidata name="SQLManager" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:DAL.ISQLManager" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.DAO_BASE" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.IContratDAO">
      <apidata name="IContratDAO" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DAL.DAO.ContratDAO" ref="true" />
      </implementors>
      <elements>
        <element api="M:DAL.DAO.IContratDAO.findByType(System.String)" />
        <element api="M:DAL.DAO.IContratDAO.FindContratByID(System.Int32)" />
        <element api="M:DAL.DAO.IContratDAO.GetAllContrats" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IContratDAO.findByType(System.String)">
      <apidata name="findByType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Type">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IContratDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IContratDAO.FindContratByID(System.Int32)">
      <apidata name="FindContratByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ContratId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Contrat" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IContratDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IContratDAO.GetAllContrats">
      <apidata name="GetAllContrats" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Contrat" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IContratDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.IOffreDAO">
      <apidata name="IOffreDAO" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </implementors>
      <elements>
        <element api="M:DAL.DAO.IOffreDAO.FindOffreByID(System.Int32)" />
        <element api="M:DAL.DAO.IOffreDAO.GetAllOffres" />
        <element api="M:DAL.DAO.IOffreDAO.GetAllOffres(BO.DTO.FiltersOffreRequest)" />
        <element api="M:DAL.DAO.IOffreDAO.GetOffresByContratId(System.Int32)" />
        <element api="M:DAL.DAO.IOffreDAO.GetOffresByPosteId(System.Int32)" />
        <element api="M:DAL.DAO.IOffreDAO.GetOffresByRegionId(System.Int32)" />
        <element api="M:DAL.DAO.IOffreDAO.InsertOffre(BO.Offre)" />
        <element api="M:DAL.DAO.IOffreDAO.UpdateOffre(BO.Offre)" />
        <element api="M:DAL.DAO.IOffreDAO.DeleteOffre(System.Int32)" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.DeleteOffre(System.Int32)">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="idOffre">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.FindOffreByID(System.Int32)">
      <apidata name="FindOffreByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="OffreId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Offre" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.GetAllOffres">
      <apidata name="GetAllOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.GetAllOffres(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetAllOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filtre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.GetOffresByContratId(System.Int32)">
      <apidata name="GetOffresByContratId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ContratId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.GetOffresByPosteId(System.Int32)">
      <apidata name="GetOffresByPosteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="PosteId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.GetOffresByRegionId(System.Int32)">
      <apidata name="GetOffresByRegionId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="RegionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IOffreDAO.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.IPosteDAO">
      <apidata name="IPosteDAO" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DAL.DAO.PosteDAO" ref="true" />
      </implementors>
      <elements>
        <element api="M:DAL.DAO.IPosteDAO.FindPosteByID(System.Int32)" />
        <element api="M:DAL.DAO.IPosteDAO.GetAllPostes" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IPosteDAO.FindPosteByID(System.Int32)">
      <apidata name="FindPosteByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="PosteId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Poste" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IPosteDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IPosteDAO.GetAllPostes">
      <apidata name="GetAllPostes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Poste" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IPosteDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.IRegionDAO">
      <apidata name="IRegionDAO" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:DAL.DAO.IRegionDAO.FindRegionByID(System.Int32)" />
        <element api="M:DAL.DAO.IRegionDAO.GetAllRegions" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IRegionDAO.FindRegionByID(System.Int32)">
      <apidata name="FindRegionByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="RegionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Region" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IRegionDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IRegionDAO.GetAllRegions">
      <apidata name="GetAllRegions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Region" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IRegionDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.IUtilisateurDAO">
      <apidata name="IUtilisateurDAO" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
      </implementors>
      <elements>
        <element api="M:DAL.DAO.IUtilisateurDAO.FindUtilisateurById(System.Int32)" />
        <element api="M:DAL.DAO.IUtilisateurDAO.GetAllUtilisateur" />
        <element api="M:DAL.DAO.IUtilisateurDAO.IsAdmin(System.Int32)" />
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IUtilisateurDAO.FindUtilisateurById(System.Int32)">
      <apidata name="FindUtilisateurById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="UtilisateurId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Utilisateur" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IUtilisateurDAO.GetAllUtilisateur">
      <apidata name="GetAllUtilisateur" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Utilisateur" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.IUtilisateurDAO.IsAdmin(System.Int32)">
      <apidata name="IsAdmin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="UtilisateurId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.OffreDAO">
      <apidata name="OffreDAO" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:DAL.DAO.DAO_BASE" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DAL.DAO.IOffreDAO" ref="true" />
      </implements>
      <elements>
        <element api="M:DAL.DAO.OffreDAO.#ctor(DAL.ISQLManager)" />
        <element api="M:DAL.DAO.OffreDAO.GetAllOffres" />
        <element api="M:DAL.DAO.OffreDAO.GetAllOffres(BO.DTO.FiltersOffreRequest)" />
        <element api="M:DAL.DAO.OffreDAO.FindOffreByID(System.Int32)" />
        <element api="M:DAL.DAO.OffreDAO.GetOffresByContratId(System.Int32)" />
        <element api="M:DAL.DAO.OffreDAO.GetOffresByPosteId(System.Int32)" />
        <element api="M:DAL.DAO.OffreDAO.GetOffresByRegionId(System.Int32)" />
        <element api="M:DAL.DAO.OffreDAO.FindOffreByDate(System.DateTime)" />
        <element api="M:DAL.DAO.OffreDAO.InsertOffre(BO.Offre)" />
        <element api="M:DAL.DAO.OffreDAO.UpdateOffre(BO.Offre)" />
        <element api="M:DAL.DAO.OffreDAO.DeleteOffre(System.Int32)" />
        <element api="F:DAL.DAO.DAO_BASE.SQLManager" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.#ctor(DAL.ISQLManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sQLManager">
          <type api="T:DAL.ISQLManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.DeleteOffre(System.Int32)">
      <apidata name="DeleteOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="IdOffre">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.DeleteOffre(System.Int32)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.FindOffreByDate(System.DateTime)">
      <apidata name="FindOffreByDate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Creation">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Offre" ref="true" />
      </returns>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.FindOffreByID(System.Int32)">
      <apidata name="FindOffreByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="OffreId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Offre" ref="true" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.FindOffreByID(System.Int32)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.GetAllOffres">
      <apidata name="GetAllOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.GetAllOffres">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.GetAllOffres(BO.DTO.FiltersOffreRequest)">
      <apidata name="GetAllOffres" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filtre">
          <type api="T:BO.DTO.FiltersOffreRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.GetAllOffres(BO.DTO.FiltersOffreRequest)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.GetOffresByContratId(System.Int32)">
      <apidata name="GetOffresByContratId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ContratId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.GetOffresByContratId(System.Int32)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.GetOffresByPosteId(System.Int32)">
      <apidata name="GetOffresByPosteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="PosteId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.GetOffresByPosteId(System.Int32)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.GetOffresByRegionId(System.Int32)">
      <apidata name="GetOffresByRegionId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="RegionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Offre" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.GetOffresByRegionId(System.Int32)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.InsertOffre(BO.Offre)">
      <apidata name="InsertOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.InsertOffre(BO.Offre)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.OffreDAO.UpdateOffre(BO.Offre)">
      <apidata name="UpdateOffre" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="offre">
          <type api="T:BO.Offre" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IOffreDAO.UpdateOffre(BO.Offre)">
          <type api="T:DAL.DAO.IOffreDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.OffreDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.PosteDAO">
      <apidata name="PosteDAO" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:DAL.DAO.DAO_BASE" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DAL.DAO.IPosteDAO" ref="true" />
      </implements>
      <elements>
        <element api="M:DAL.DAO.PosteDAO.#ctor(DAL.ISQLManager)" />
        <element api="M:DAL.DAO.PosteDAO.GetAllPostes" />
        <element api="M:DAL.DAO.PosteDAO.FindPosteByID(System.Int32)" />
        <element api="F:DAL.DAO.DAO_BASE.SQLManager" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.PosteDAO.#ctor(DAL.ISQLManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sQLManager">
          <type api="T:DAL.ISQLManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.PosteDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.PosteDAO.FindPosteByID(System.Int32)">
      <apidata name="FindPosteByID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="PosteId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Poste" ref="true" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IPosteDAO.FindPosteByID(System.Int32)">
          <type api="T:DAL.DAO.IPosteDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.PosteDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.PosteDAO.GetAllPostes">
      <apidata name="GetAllPostes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Poste" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IPosteDAO.GetAllPostes">
          <type api="T:DAL.DAO.IPosteDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.PosteDAO" ref="true" />
      </containers>
    </api>
    <api id="T:DAL.DAO.UtilisateurDAO">
      <apidata name="UtilisateurDAO" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:DAL.DAO.DAO_BASE" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
      </implements>
      <elements>
        <element api="M:DAL.DAO.UtilisateurDAO.#ctor(DAL.ISQLManager)" />
        <element api="M:DAL.DAO.UtilisateurDAO.GetAllUtilisateur" />
        <element api="M:DAL.DAO.UtilisateurDAO.FindUtilisateurById(System.Int32)" />
        <element api="M:DAL.DAO.UtilisateurDAO.IsAdmin(System.Int32)" />
        <element api="F:DAL.DAO.DAO_BASE.SQLManager" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
      </containers>
    </api>
    <api id="M:DAL.DAO.UtilisateurDAO.#ctor(DAL.ISQLManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sQLManager">
          <type api="T:DAL.ISQLManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.UtilisateurDAO.FindUtilisateurById(System.Int32)">
      <apidata name="FindUtilisateurById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="UtilisateurId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:BO.Utilisateur" ref="true" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IUtilisateurDAO.FindUtilisateurById(System.Int32)">
          <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.UtilisateurDAO.GetAllUtilisateur">
      <apidata name="GetAllUtilisateur" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:BO.Utilisateur" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:DAL.DAO.IUtilisateurDAO.GetAllUtilisateur">
          <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.DAO.UtilisateurDAO.IsAdmin(System.Int32)">
      <apidata name="IsAdmin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="UtilisateurId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:DAL.DAO.IUtilisateurDAO.IsAdmin(System.Int32)">
          <type api="T:DAL.DAO.IUtilisateurDAO" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.DAO" />
        <type api="T:DAL.DAO.UtilisateurDAO" ref="true" />
      </containers>
    </api>
    <api id="N:DAL.Exceptions">
      <apidata name="DAL.Exceptions" group="namespace" />
      <elements>
        <element api="T:DAL.Exceptions.DAOException" />
      </elements>
    </api>
    <api id="T:DAL.Exceptions.DAOException">
      <apidata name="DAOException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:DAL.Exceptions.DAOException.#ctor" />
        <element api="M:DAL.Exceptions.DAOException.#ctor(System.String)" />
        <element api="M:DAL.Exceptions.DAOException.#ctor(System.String,System.Exception)" />
        <element api="M:DAL.Exceptions.DAOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Exceptions" />
      </containers>
    </api>
    <api id="M:DAL.Exceptions.DAOException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Exceptions" />
        <type api="T:DAL.Exceptions.DAOException" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.Exceptions.DAOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Exceptions" />
        <type api="T:DAL.Exceptions.DAOException" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.Exceptions.DAOException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Exceptions" />
        <type api="T:DAL.Exceptions.DAOException" ref="true" />
      </containers>
    </api>
    <api id="M:DAL.Exceptions.DAOException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="DAL" module="DAL" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:DAL.Exceptions" />
        <type api="T:DAL.Exceptions.DAOException" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>